STRING_LUT = Dict{Kind, String}(
AT_SIGN              => "@",
COMMA                => ",",
SEMICOLON            => ";",
BREAK                => "break",
CONTINUE             => "continue",
ABSTRACT             => "abstract",
CONST                => "const",
EXPORT               => "export",
GLOBAL               => "global",
LOCAL                => "local",
IMPORT               => "import",
IMPORTALL            => "importall",
RETURN               => "return",
USING                => "using",
BITSTYPE             => "bitstype",
TYPEALIAS            => "typealias",
BEGIN                => "begin",
QUOTE                => "quote",
BAREMODULE           => "baremodule",
DO                   => "do",
FOR                  => "for",
FUNCTION             => "function",
IMMUTABLE            => "immutable",
LET                  => "let",
MACRO                => "macro",
MODULE               => "module",
TYPE                 => "type",
WHILE                => "while",
IF                   => "if",
ELSEIF               => "elseif",
ELSE                 => "else",
TRY                  => "try",
CATCH                => "catch",
FINALLY              => "finally",
END                  => "end",
LITERAL              => "literal",
INTEGER              => "integer",
FLOAT                => "float",
TRUE                 => "true",
FALSE                => "false",
LSQUARE              => "[",
RSQUARE              => "]",
LBRACE               => "{",
RBRACE               => "}",
LPAREN               => "(",
RPAREN               => ")",
EQ                   => "=",
PLUS_EQ              => "+=",
MINUS_EQ             => "-=",
STAR_EQ              => "*=",
FWD_SLASH_EQ         => "/=",
FWDFWD_SLASH_EQ      => "//=",
OR_EQ                => "|=",
CIRCUMFLEX_EQ        => "^=",
DIVISION_EQ          => "รท=",
REM_EQ               => "%=",
LBITSHIFT_EQ         => "<<=",
RBITSHIFT_EQ         => ">>=",
UNSIGNED_BITSHIFT_EQ => ">>>=",
BACKSLASH_EQ         => "\\=",
AND_EQ               => "&=",
COLON_EQ             => ":=",
PAIR_ARROW           => "=>",
APPROX               => "~",
EX_OR_EQ             => "\$=",
CONDITIONAL          => "?",
LAZY_OR              => "||",
LAZY_AND             => "&&",
ISSUBTYPE            => "<:",
GREATER_COLON        => ">:",
GREATER              => ">",
LESS                 => "<",
GREATER_EQ           => ">=",
LESS_EQ              =>  "<=",
EQEQ                 => "==",
EQEQEQ               => "===",
NOT_EQ               => "!=",
NOT_IS               => "!==",
IN                   => "in",
ISA                  => "isa",
LPIPE                => "<|",
RPIPE                => "|>",
COLON                => ":",
DDOT                 => "..",
EX_OR                => "\$",
PLUS                 => "+",
MINUS                => "-",
PLUSPLUS             => "++",
OR                   => "|",
LBITSHIFT            => "<<",
RBITSHIFT            => ">>",
UNSIGNED_BITSHIFT    => ">>>",
STAR                 => "*",
FWD_SLASH            => "/",
REM                  => "%",
BACKSLASH            => "\\",
AND                  => "&",
FWDFWD_SLASH         => "//",
CIRCUMFLEX_ACCENT    => "^",
DECLARATION          => "::",
DOT                  => ".",
NOT                  => "!",
PRIME                => "'",
DDDOT                => "...",
TRANSPOSE            => ".'",
ANON_FUNC            => "->",
RIGHT_ARROW          => "-->",
)

